<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>